version: '3.9'

services:
  nginx:
    container_name: nginx
    build:
      context: ${PATH_TO_PROJECT}
      dockerfile: docker/Dockerfile-nginx
    ports:
      - '80:80'
      - '443:443'
    restart: always
    networks:
      sc_network:
        ipv4_address: 172.172.0.2

  server:
    container_name: server
    build:
      context: ${PATH_TO_PROJECT}
      dockerfile: docker/Dockerfile-go
    restart: always
    environment:
      DATABASE_URL: postgresql://postgres:secret@postgres:5432/repaircat
    networks:
      sc_network:
        ipv4_address: 172.172.0.3

  app:
    container_name: app
    build:
      context: ${PATH_TO_PROJECT}
      dockerfile: docker/Dockerfile-nuxt
      args:
        API_BASE_URL: ${API_BASE_URL}
    restart: always
    environment:
      API_BASE_URL: ${API_BASE_URL}
    networks:
      sc_network:
        ipv4_address: 172.172.0.4

  postgres:
    container_name: database
    image: postgres:14.3
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5431:5432'
    restart: always
    networks:
      sc_network:
        ipv4_address: 172.172.0.5

networks:
  sc_network:
    name: sc_network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.172.0.0/24
          gateway: 172.172.0.1